From f28e9db3bbf1337a681e30919f1bbb499442e461 Mon Sep 17 00:00:00 2001
From: jtg-gg <jefry.ted@vcube.co.jp>
Date: Wed, 2 Mar 2016 19:00:38 +0800
Subject: [PATCH] [Build][Linux] add support for linux arm binary strip

---
 BUILD.gn                  |  6 ++++-
 nw.gypi                   | 63 ++++++++++++++++++++++++++++++++++++++++-------
 tools/dump_app_syms       |  2 +-
 tools/package_binaries.py |  2 ++
 4 files changed, 62 insertions(+), 11 deletions(-)

diff --git a/BUILD.gn b/BUILD.gn
index 585666a..39dd823 100644
--- a/BUILD.gn
+++ b/BUILD.gn
@@ -331,7 +331,11 @@ if (is_mac && !is_component_build) {
 }
 
 if (is_linux && !is_component_build) {
-  linux_strip_binary = 1
+  if (target_cpu == "arm") {
+    linux_strip_binary = "arm-linux-gnueabihf-strip"
+  } else {
+    linux_strip_binary = "strip"
+  }
   arch_pkgname = target_cpu
   if (target_cpu == "x86") {
     arch_pkgname = "ia32"
diff --git a/nw.gypi b/nw.gypi
index 35776af..93f2c9c 100644
--- a/nw.gypi
+++ b/nw.gypi
@@ -288,9 +288,17 @@
           ],
         }],
         ['OS=="linux"', {
-          'variables': {
-            'linux_strip_binary': 1,
-          },
+          'conditions': [
+            ['target_arch=="arm"', {
+              'variables': {
+                'linux_strip_binary': 'arm-linux-gnueabihf-strip',
+              },
+            }, {
+              'variables': {
+                'linux_strip_binary': 'strip',
+              },
+            }],
+          ],
           'actions': [
             {
               'action_name': 'dump_symbol_and_strip',
@@ -346,19 +354,45 @@
               'message': 'Dumping breakpad symbols to <(_outputs)',
               'process_outputs_as_sources': 1,
             },
+            {
+              'action_name': 'dump_symbol_and_strip_4',
+              'inputs': [
+                '<(DEPTH)/content/nw/tools/dump_app_syms',
+                '<(PRODUCT_DIR)/dump_syms',
+                '<(PRODUCT_DIR)/lib/libffmpeg.so',
+              ],
+              'outputs': [
+                '<(PRODUCT_DIR)/ffmpeg.so.breakpad.<(target_arch)',
+              ],
+              'action': ['<(DEPTH)/content/nw/tools/dump_app_syms',
+                         '<(PRODUCT_DIR)/dump_syms',
+                         '<(linux_strip_binary)',
+                         '<(PRODUCT_DIR)/lib/libffmpeg.so',
+                         '<@(_outputs)'],
+              'message': 'Dumping breakpad symbols to <(_outputs)',
+              'process_outputs_as_sources': 1,
+            },
           ],
           'dependencies': [
             'nwjs',
-            '../breakpad/breakpad.gyp:dump_syms',
+            '../breakpad/breakpad.gyp:dump_syms#host',
           ],
         }],
         ['OS=="linux" and disable_nacl==0', {
-          'variables': {
-            'linux_strip_binary': 1,
-          },
+          'conditions': [
+             ['target_arch=="arm"', {
+               'variables': {
+                 'linux_strip_binary': 'arm-linux-gnueabihf-strip',
+                },
+             }, {
+               'variables': {
+                 'linux_strip_binary': 'strip',
+               },
+            }],
+          ],
           'actions': [
             {
-              'action_name': 'dump_symbol_and_strip_4',
+              'action_name': 'dump_symbol_and_strip_5',
               'inputs': [
                 '<(DEPTH)/content/nw/tools/dump_app_syms',
                 '<(PRODUCT_DIR)/dump_syms',
@@ -386,6 +420,17 @@
         ['OS=="linux"', {
           'actions': [
             {
+              'conditions': [
+                ['target_arch=="arm"', {
+                  'variables': {
+                    'linux_strip_binary': 'arm-linux-gnueabihf-strip',
+                  },
+                }, {
+                  'variables': {
+                    'linux_strip_binary': 'strip',
+                  },
+                }],
+              ],
               'action_name': 'strip_nw_binaries',
               'inputs': [
                 '<(PRODUCT_DIR)/chromedriver',
@@ -395,7 +440,7 @@
               'outputs': [
                 '<(PRODUCT_DIR)/strip_binaries.stamp',
               ],
-              'action': ['strip',
+              'action': ['<(linux_strip_binary)',
                          '<@(_inputs)'],
               'message': 'Stripping release binaries',
             },
diff --git a/tools/dump_app_syms b/tools/dump_app_syms
index 5cd7763..9cc43d5 100755
--- a/tools/dump_app_syms
+++ b/tools/dump_app_syms
@@ -34,7 +34,7 @@ echo "bb"
 fi
 
 if [ "$STRIP_BINARY" != "0" ]; then
-  strip "$INFILE"
+  "$STRIP_BINARY" "$INFILE"
 # To avoid dumpping twice.
 echo "aa"
   touch "$OUTFILE"
diff --git a/tools/package_binaries.py b/tools/package_binaries.py
index d6465af..d80b4b0 100755
--- a/tools/package_binaries.py
+++ b/tools/package_binaries.py
@@ -172,6 +172,8 @@ def generate_target_nw(platform_name, arch, version):
             target['input'] += ['nacl_helper', 'nacl_helper_bootstrap', 'pnacl']
             if arch == 'x64':
                 target['input'].append('nacl_irt_x86_64.nexe')
+            elif arch == 'arm':
+                target['input'].append('nacl_irt_arm.nexe')
             else:
                 target['input'].append('nacl_irt_x86_32.nexe')
             
